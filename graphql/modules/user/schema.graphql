input UserInput {
    name: String!
    email: String!
    password: String!
    cpf: String!
    picture: Upload
    telefone: String
    address: AddressInput
    church: ChurchInput
}

input UserUpdateInput {
    name: String
    email: String
    password: String
    cpf: String
    picture: Upload
    telefone: String
    address: AddressInput
    church: ChurchInput    
}

type UserPayment {
    actualCode: String,
    actualStatus: Int,
    failedCodes: [String]
}

type User {
    _id: ID!
    name: String!
    email: String!
    cpf: String!
    password: String
    picture: String
    telefone: String
    address: Address
    church: Church
    token: String
    isConfirmado: Boolean
    payment: UserPayment
}

type Query {
    users: [User!]
    user(id: ID!): User!
}

type Mutation {
    createUser(data: UserInput!): User!
    updateUser(id: ID!, data: UserUpdateInput!): User!
    removeUser(id: ID!): Boolean!
}